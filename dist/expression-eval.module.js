import e from"jsep";export{default as parse}from"jsep";var r=function(e,r,o){var i=function(e){try{var c=!1;function l(){if("function"==typeof p){var r=p,n=r.apply,t=f;return Promise.resolve(s(e.arguments)).then(function(e){return Promise.resolve(n.call(r,t,e))})}}switch(e.type){case"ArrayExpression":return Promise.resolve(s(e.elements));case"BinaryExpression":return Promise.resolve(Promise.all([i(e.left),i(e.right)])).then(function(r){return n[e.operator](r[0],r[1])});case"CallExpression":var f,p,m,v="MemberExpression"===e.callee.type?Promise.resolve(u(e.callee)).then(function(e){f=(m=e)[0],p=m[1]}):Promise.resolve(i(e.callee)).then(function(e){p=e});return Promise.resolve(v&&v.then?v.then(l):l());case"ConditionalExpression":return Promise.resolve(i(e.test)).then(function(r){return Promise.resolve(i(r?e.consequent:e.alternate))});case"Identifier":return a(e.name,r,o),Promise.resolve(r[e.name]);case"Literal":return Promise.resolve(e.value);case"LogicalExpression":{function h(r){return c?r:Promise.resolve(Promise.all([i(e.left),i(e.right)])).then(function(r){return n[e.operator](r[0],r[1])})}var P="||"===e.operator?(c=!0,Promise.resolve(i(e.left)).then(function(r){return r||Promise.resolve(i(e.right))})):function(){if("&&"===e.operator)return c=!0,Promise.resolve(i(e.left)).then(function(r){return r?Promise.resolve(i(e.right)):r})}();return Promise.resolve(P&&P.then?P.then(h):h(P))}case"MemberExpression":return Promise.resolve(u(e)).then(function(e){return e[1]});case"ThisExpression":return Promise.resolve(r);case"UnaryExpression":var y=t[e.operator];return Promise.resolve(i(e.argument)).then(function(e){return y.call(t,e)});default:return Promise.resolve(void 0)}}catch(e){return Promise.reject(e)}},u=function(e){try{return Promise.resolve(i(e.object)).then(function(r){return e.computed?Promise.resolve(i(e.property)).then(function(e){return a(e,r,o),[r,r[e]]}):(a(e.property.name,r,o),[r,r[e.property.name]])})}catch(e){return Promise.reject(e)}},s=function(e){try{return Promise.resolve(Promise.all(e.map(function(e){return i(e)})))}catch(e){return Promise.reject(e)}};return Promise.resolve(i(e))},n={"||":function(e,r){return e||r},"&&":function(e,r){return e&&r},"|":function(e,r){return e|r},"^":function(e,r){return e^r},"&":function(e,r){return e&r},"==":function(e,r){return e==r},"!=":function(e,r){return e!=r},"===":function(e,r){return e===r},"!==":function(e,r){return e!==r},"<":function(e,r){return e<r},">":function(e,r){return e>r},"<=":function(e,r){return e<=r},">=":function(e,r){return e>=r},"<<":function(e,r){return e<<r},">>":function(e,r){return e>>r},">>>":function(e,r){return e>>>r},"+":function(e,r){return e+r},"-":function(e,r){return e-r},"*":function(e,r){return e*r},"/":function(e,r){return e/r},"%":function(e,r){return e%r}},t={"-":function(e){return-e},"+":function(e){return+e},"~":function(e){return~e},"!":function(e){return!e}};function o(e,r,o){return s(e);function i(e){return e.map(function(e){return s(e)})}function u(e){var r=s(e.object);if(e.computed){var n=s(e.property);return a(n,r,o),[r,r[n]]}return a(e.property.name,r,o),[r,r[e.property.name]]}function s(e){switch(e.type){case"ArrayExpression":return i(e.elements);case"BinaryExpression":return n[e.operator](s(e.left),s(e.right));case"CallExpression":var c,l,f;if("MemberExpression"===e.callee.type?(c=(f=u(e.callee))[0],l=f[1]):l=s(e.callee),"function"!=typeof l)return;return l.apply(c,i(e.arguments));case"ConditionalExpression":return s(e.test)?s(e.consequent):s(e.alternate);case"Identifier":return a(e.name,r,o),r[e.name];case"Literal":return e.value;case"LogicalExpression":return"||"===e.operator?s(e.left)||s(e.right):"&&"===e.operator?s(e.left)&&s(e.right):n[e.operator](s(e.left),s(e.right));case"MemberExpression":return u(e)[1];case"ThisExpression":return r;case"UnaryExpression":return t[e.operator](s(e.argument));default:return}}}function i(r){return o.bind(null,e(r))}function u(n){return r.bind(null,e(n))}function s(r,n){e.addUnaryOp(r),t[r]=n}function c(r,t){e.addBinaryOp(r),n[r]=t}function a(e,r,n){if(void 0===n&&(n={strict:!1}),n.strict&&!Object.keys(r).includes(e))throw new Error(e+" is not defined")}export{o as eval,r as evalAsync,i as compile,u as compileAsync,s as addUnaryOp,c as addBinaryOp};
//# sourceMappingURL=expression-eval.module.js.map
