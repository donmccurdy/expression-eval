!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("jsep")):"function"==typeof define&&define.amd?define(["exports","jsep"],r):r(e.expressionEval={},e.jsep)}(this,function(e,r){r=r&&r.hasOwnProperty("default")?r.default:r;var n=function(e,r,n){var i=function(e){try{var a=!1;function f(){if("function"==typeof p){var r=p,n=r.apply,t=l;return Promise.resolve(c(e.arguments)).then(function(e){return Promise.resolve(n.call(r,t,e))})}}switch(e.type){case"ArrayExpression":return Promise.resolve(c(e.elements));case"BinaryExpression":return Promise.resolve(Promise.all([i(e.left),i(e.right)])).then(function(r){return t[e.operator](r[0],r[1])});case"CallExpression":var l,p,m,v="MemberExpression"===e.callee.type?Promise.resolve(s(e.callee)).then(function(e){l=(m=e)[0],p=m[1]}):Promise.resolve(i(e.callee)).then(function(e){p=e});return Promise.resolve(v&&v.then?v.then(f):f());case"ConditionalExpression":return Promise.resolve(i(e.test)).then(function(r){return Promise.resolve(i(r?e.consequent:e.alternate))});case"Identifier":return u(e.name,r,n),Promise.resolve(r[e.name]);case"Literal":return Promise.resolve(e.value);case"LogicalExpression":{function h(r){return a?r:Promise.resolve(Promise.all([i(e.left),i(e.right)])).then(function(r){return t[e.operator](r[0],r[1])})}var y="||"===e.operator?(a=!0,Promise.resolve(i(e.left)).then(function(r){return r||Promise.resolve(i(e.right))})):function(){if("&&"===e.operator)return a=!0,Promise.resolve(i(e.left)).then(function(r){return r?Promise.resolve(i(e.right)):r})}();return Promise.resolve(y&&y.then?y.then(h):h(y))}case"MemberExpression":return Promise.resolve(s(e)).then(function(e){return e[1]});case"ThisExpression":return Promise.resolve(r);case"UnaryExpression":var d=o[e.operator];return Promise.resolve(i(e.argument)).then(function(e){return d.call(o,e)});default:return Promise.resolve(void 0)}}catch(e){return Promise.reject(e)}},s=function(e){try{return Promise.resolve(i(e.object)).then(function(r){return e.computed?Promise.resolve(i(e.property)).then(function(e){return u(e,r,n),[r,r[e]]}):(u(e.property.name,r,n),[r,r[e.property.name]])})}catch(e){return Promise.reject(e)}},c=function(e){try{return Promise.resolve(Promise.all(e.map(function(e){return i(e)})))}catch(e){return Promise.reject(e)}};return Promise.resolve(i(e))},t={"||":function(e,r){return e||r},"&&":function(e,r){return e&&r},"|":function(e,r){return e|r},"^":function(e,r){return e^r},"&":function(e,r){return e&r},"==":function(e,r){return e==r},"!=":function(e,r){return e!=r},"===":function(e,r){return e===r},"!==":function(e,r){return e!==r},"<":function(e,r){return e<r},">":function(e,r){return e>r},"<=":function(e,r){return e<=r},">=":function(e,r){return e>=r},"<<":function(e,r){return e<<r},">>":function(e,r){return e>>r},">>>":function(e,r){return e>>>r},"+":function(e,r){return e+r},"-":function(e,r){return e-r},"*":function(e,r){return e*r},"/":function(e,r){return e/r},"%":function(e,r){return e%r}},o={"-":function(e){return-e},"+":function(e){return+e},"~":function(e){return~e},"!":function(e){return!e}};function i(e,r,n){return c(e);function i(e){return e.map(function(e){return c(e)})}function s(e){var r=c(e.object);if(e.computed){var t=c(e.property);return u(t,r,n),[r,r[t]]}return u(e.property.name,r,n),[r,r[e.property.name]]}function c(e){switch(e.type){case"ArrayExpression":return i(e.elements);case"BinaryExpression":return t[e.operator](c(e.left),c(e.right));case"CallExpression":var a,f,l;if("MemberExpression"===e.callee.type?(a=(l=s(e.callee))[0],f=l[1]):f=c(e.callee),"function"!=typeof f)return;return f.apply(a,i(e.arguments));case"ConditionalExpression":return c(e.test)?c(e.consequent):c(e.alternate);case"Identifier":return u(e.name,r,n),r[e.name];case"Literal":return e.value;case"LogicalExpression":return"||"===e.operator?c(e.left)||c(e.right):"&&"===e.operator?c(e.left)&&c(e.right):t[e.operator](c(e.left),c(e.right));case"MemberExpression":return s(e)[1];case"ThisExpression":return r;case"UnaryExpression":return o[e.operator](c(e.argument));default:return}}}function u(e,r,n){if(void 0===n&&(n={strict:!1}),n.strict&&!Object.keys(r).includes(e))throw new Error(e+" is not defined")}e.parse=r,e.eval=i,e.evalAsync=n,e.compile=function(e){return i.bind(null,r(e))},e.compileAsync=function(e){return n.bind(null,r(e))},e.addUnaryOp=function(e,n){r.addUnaryOp(e),o[e]=n},e.addBinaryOp=function(e,n){r.addBinaryOp(e),t[e]=n}});
//# sourceMappingURL=expression-eval.umd.js.map
